version: 2
jobs:
  build:
    working_directory: /go/src/github.com/segmentio/go-hello-world

    docker:
      - image: golang

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "vendor/vendor.json" }}

      - run:
          name: Configure netrc
          command: |
            echo "machine github.com login $GH_LOGIN" > ~/.netrc

      - setup_remote_docker:
          reusable: true

      - run:
          name: Install docker engine
          command: |
            curl -L -o /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-17.06.1-ce.tgz
            tar -xz -C /tmp -f /tmp/docker.tgz
            mv /tmp/docker/docker* /usr/bin/
            curl -L "https://github.com/docker/compose/releases/download/1.14.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
            chmod +x /usr/bin/docker-compose
            docker login -u $DOCKER_USER -p $DOCKER_PASS

      - run:
          name: Authenticate to ECR
          command: |
            curl -O https://bootstrap.pypa.io/get-pip.py && python get-pip.py
            pip install awscli
            $(aws ecr get-login --no-include-email --region $AWS_REGION)

      - run:
          name: Dependencies
          command: |
            docker-compose pull
            go get -u github.com/kardianos/govendor
            make deps

      - run:
          name: Services
          command: |
            docker-compose up -d
            docker-compose kill
            docker-compose rm -fv
            docker system prune -f --volumes
            docker-compose up -d

      - run:
          name: Create test image
          command: |
            file=test-dockerfile
            echo "FROM golang:1.9" >> $file
            echo "COPY . $PWD" >> $file
            echo "WORKDIR $PWD" >> $file
            echo "RUN go version && go get -u github.com/kardianos/govendor" >> $file
            docker build -t test -f $file .
            rm $file

      - run:
          name: Test
          command: |
            docker run --rm \
              --network host \
              -it test \
              make test

      - save_cache:
          key: deps-{{ checksum "vendor/vendor.json" }}
          paths:
            - vendor/

      - run:
          name: Deployment
          command: |
            if [ -n "$(git tag --points-at HEAD)" ]; then
                make release
            else
                echo "==> untagged: ignoring build"
            fi
